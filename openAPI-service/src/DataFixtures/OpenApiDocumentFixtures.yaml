App\Entity\OpenApiDocument:
  document:
    title: 'Pet Store'
    description: "This is a Pet Store"
    version: '1.0.0'
    paths: ['@pet_item']
    tags: ['@pet_tag']
    securitySchemes: ['@api_key']

App\Entity\Path:
#  pet:
#    endpoint: '/pet'
#    items: ['@pet_post']
  pet_item:
    endpoint: '/pet/{id}'
    items: ['@pet_get', '@pet_put']
    parameters: ['@pet_get_id']

App\Entity\PathItem:
  pet_put:
    httpMethod: '@put'
    tags: ['@pet_tag']
    summary: 'Update a pet'
    responses: ['@pet_post_405']
    requestBody: '@pet_put_body'
    securityScheme: '@api_key'
  pet_get:
    httpMethod: '@get'
    tags: ['@pet_tag']
    summary: 'Find pet by id'
    description: 'Find a pet in the Pet Store'
    responses: ['@pet_get_200']
    securityScheme: '@api_key'
#  pet_delete:
#    httpMethod: '@delete'
#    tags: ['@pet_tag']
#    summary: 'Deletes a pet'
#    responses: ['@pet_delete_400', '@pet_delete_404']
#    parameters: ['@pet_delete_id']
#    securityScheme: '@api_key'

App\Entity\HttpMethod:
  put:
    method: 'PUT'
  get:
    method: 'GET'
#  delete:
#    method: 'DELETE'

App\Entity\HttpResponse:
  pet_post_405:
    httpStatusCode: 405
    description: 'Invalid input'
  pet_get_200:
    httpStatusCode: 200
    description: 'Successful operation'
    content:
      type: 'object'
      properties:
        id:
          example: 0
        name:
          example: 'doggie'
        status:
          example: 'available'

#    content: '[{
#      "type": "object",
#      "properties": {
#        "id": {
#          "example": 0
#        },
#        "name": {
#          "example": "doggie"
#        },
#        "status": {
#          "example": "available"
#        }
#      }
#    }]'
#  pet_get_400:
#    httpStatusCode: 400
#    description: 'Invalid ID supplied'
#  pet_get_404:
#    httpStatusCode: 404
#    description: 'Pet not found'
#  pet_delete_400:
#    httpStatusCode: 400
#    description: 'Invalid ID supplied'
#  pet_delete_404:
#    httpStatusCode: 404
#    description: 'Pet not found'

App\Entity\Tag:
  pet_tag:
    name: 'Pet'
    description: 'Everythings about Pets'

App\Entity\Parameter:
  pet_get_id:
    name: 'id'
    location: '@path'
    description: 'ID of pet to return'
    required: true
    parameterSchema:
      type: 'integer'
#  pet_delete_id:
#    name: 'petId'
#    location: '@query'
#    description: 'ID of pet to delete'
#    required: true

App\Entity\ParameterLocation:
  path:
    location: 'path'

App\Entity\RequestBody:
  pet_put_body:
    content:
      type: 'object'
      properties:
        id:
          example: 0
        name:
          example: 'doggie'
        status:
          example: 'available'
    required: true
    description: 'Pet object that needs to be added to the store'

App\Entity\SecurityScheme:
  api_key:
    type: '@api_key_type'
    apiKeyLocation: '@apiKey_location_header'
    name: 'api_key'

App\Entity\SecurityType:
  api_key_type:
    type: 'apiKey'

App\Entity\ApiKeyLocation:
  apiKey_location_header:
    location: 'header'